{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class SemanticService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:8089/semantic/processInput';\n    this.apiUrl1 = 'http://localhost:8088';\n  }\n  processInput(input) {\n    return this.http.post(this.apiUrl, {\n      input\n    });\n  }\n  confirmResource(data) {\n    con;\n    const confirmationUrl = `${this.apiUrl1}/confirmResource`;\n    return this.http.post(confirmationUrl, data);\n  }\n  static #_ = this.ɵfac = function SemanticService_Factory(t) {\n    return new (t || SemanticService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: SemanticService,\n    factory: SemanticService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["SemanticService","constructor","http","apiUrl","apiUrl1","processInput","input","post","confirmResource","data","con","confirmationUrl","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\User\\semantic\\src\\app\\semantic.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n@Injectable({\n  providedIn: 'root'\n})\nexport class SemanticService {\n\n  private apiUrl = 'http://localhost:8089/semantic/processInput';\n  private apiUrl1='http://localhost:8088'\n  constructor(private http: HttpClient) {}\n\n  processInput(input: string): Observable<string> {\n    return this.http.post<string>(this.apiUrl, { input });\n  }\n  confirmResource(data: any): Observable<any> {\n    con\n    const confirmationUrl = `${this.apiUrl1}/confirmResource`;\n    return this.http.post<any>(confirmationUrl, data);\n  }\n}\n"],"mappings":";;AAMA,OAAM,MAAOA,eAAe;EAI1BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,MAAM,GAAG,6CAA6C;IACtD,KAAAC,OAAO,GAAC,uBAAuB;EACA;EAEvCC,YAAYA,CAACC,KAAa;IACxB,OAAO,IAAI,CAACJ,IAAI,CAACK,IAAI,CAAS,IAAI,CAACJ,MAAM,EAAE;MAAEG;IAAK,CAAE,CAAC;EACvD;EACAE,eAAeA,CAACC,IAAS;IACvBC,GAAG;IACH,MAAMC,eAAe,GAAG,GAAG,IAAI,CAACP,OAAO,kBAAkB;IACzD,OAAO,IAAI,CAACF,IAAI,CAACK,IAAI,CAAMI,eAAe,EAAEF,IAAI,CAAC;EACnD;EAAC,QAAAG,CAAA,G;qBAbUZ,eAAe,EAAAa,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAfjB,eAAe;IAAAkB,OAAA,EAAflB,eAAe,CAAAmB,IAAA;IAAAC,UAAA,EAFd;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}