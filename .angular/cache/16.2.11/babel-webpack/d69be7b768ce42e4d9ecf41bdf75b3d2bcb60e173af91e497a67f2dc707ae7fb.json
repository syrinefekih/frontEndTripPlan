{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class SemanticService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:8089/semantic/processInput'; // Update with your backend URL\n  }\n\n  processInput(input) {\n    return this.http.post(this.apiUrl, {\n      input\n    });\n  }\n  static #_ = this.ɵfac = function SemanticService_Factory(t) {\n    return new (t || SemanticService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: SemanticService,\n    factory: SemanticService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["SemanticService","constructor","http","apiUrl","processInput","input","post","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\User\\semantic\\src\\app\\semantic.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n@Injectable({\n  providedIn: 'root'\n})\nexport class SemanticService {\n\n  private apiUrl = 'http://localhost:8089/semantic/processInput'; // Update with your backend URL\n\n  constructor(private http: HttpClient) {}\n\n  processInput(input: string): Observable<string> {\n    return this.http.post<string>(this.apiUrl, { input });\n  }\n}\n"],"mappings":";;AAMA,OAAM,MAAOA,eAAe;EAI1BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,MAAM,GAAG,6CAA6C,CAAC,CAAC;EAEzB;;EAEvCC,YAAYA,CAACC,KAAa;IACxB,OAAO,IAAI,CAACH,IAAI,CAACI,IAAI,CAAS,IAAI,CAACH,MAAM,EAAE;MAAEE;IAAK,CAAE,CAAC;EACvD;EAAC,QAAAE,CAAA,G;qBARUP,eAAe,EAAAQ,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAfZ,eAAe;IAAAa,OAAA,EAAfb,eAAe,CAAAc,IAAA;IAAAC,UAAA,EAFd;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}