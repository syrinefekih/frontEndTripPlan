{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let ResumeComponent = class ResumeComponent {\n  //activities: string[]; // List of activities\n  constructor(route, http, workflowService, router, hotel) {\n    this.route = route;\n    this.http = http;\n    this.workflowService = workflowService;\n    this.router = router;\n    this.hotel = hotel;\n    this.id = 0;\n    this.totalCost = 0;\n  }\n  ngOnInit() {\n    this.route.paramMap.subscribe(params => {\n      this.id = params.get('id');\n    });\n    this.getFlight(this.id);\n    this.getHotel(this.id);\n    console.log(this.flight, this.hotel);\n    //this.activities = this.getActivities(); // Populate with actual activities\n    this.calculateTotalCost();\n  }\n  getFlight(userId) {\n    this.http.get(`http://localhost:8089/flights/flight/${userId}`).subscribe(data => {\n      this.flight = data;\n      console.log(data);\n    }, error => {\n      console.error('Error fetching flight data', error);\n    });\n  }\n  getHotel(userId) {\n    this.http.get(`http://localhost:8089/hotels/hotel/${userId}`).subscribe(data => {\n      this.hotel = data;\n      console.log(data);\n    }, error => {\n      console.error('Error fetching hotel data', error);\n    });\n  }\n  findFlightObjectById(id) {\n    console.log(this.reclamService.findById(id));\n    return this.reclamService.findById(id);\n  }\n  getActivities() {\n    // Ideally, these activities should be fetched from the backend or based on the country visited.\n    return ['Activity 1', 'Activity 2', 'Activity 3'];\n  }\n  confirmAndNavigate() {\n    // Logic to perform before navigation (if any)\n    // Navigate to another page, e.g., '/confirmation'\n    this.router.navigate(['/confirmation', this.id]);\n  }\n  calculateTotalCost() {\n    this.totalCost = 0;\n    console.log(this.flight.price);\n    this.totalCost += this.flight.price;\n    this.totalCost += this.hotel.price;\n  }\n};\nResumeComponent = __decorate([Component({\n  selector: 'app-resume',\n  templateUrl: './resume.component.html',\n  styleUrls: ['./resume.component.css']\n})], ResumeComponent);","map":{"version":3,"names":["Component","ResumeComponent","constructor","route","http","workflowService","router","hotel","id","totalCost","ngOnInit","paramMap","subscribe","params","get","getFlight","getHotel","console","log","flight","calculateTotalCost","userId","data","error","findFlightObjectById","reclamService","findById","getActivities","confirmAndNavigate","navigate","price","__decorate","selector","templateUrl","styleUrls"],"sources":["D:\\newsemantic\\semantic-front\\src\\app\\resume\\resume.component.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Component } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { WorkflowService } from '../workflow.service';\n\n@Component({\n  selector: 'app-resume',\n  templateUrl: './resume.component.html',\n  styleUrls: ['./resume.component.css']\n})\nexport class ResumeComponent {\n  id = 0 as number ;\n  flight: any;\n  hotel: any;\n  totalCost: number = 0;\n\n  //activities: string[]; // List of activities\n\n  constructor(private route: ActivatedRoute,private http: HttpClient,private workflowService : WorkflowService, private router: Router,private hotel) { }\n\n  ngOnInit() {\n    this.route.paramMap.subscribe((params: { get: (arg0: string) => any; }) => {\n      this.id = params.get('id'); \n    });\n    this.getFlight(this.id);\n    this.getHotel(this.id);\n    console.log(this.flight,this.hotel);\n    \n    //this.activities = this.getActivities(); // Populate with actual activities\n    this.calculateTotalCost();\n\n  }\n\n  getFlight(userId: number) {\n    this.http.get(`http://localhost:8089/flights/flight/${userId}`)\n      .subscribe(data => {\n        this.flight = data;\n        console.log(data);\n      }, error => {\n        console.error('Error fetching flight data', error);\n      });\n  }\n\n  getHotel(userId: number) {\n    this.http.get(`http://localhost:8089/hotels/hotel/${userId}`)\n      .subscribe(data => {\n        this.hotel = data;\n        console.log(data);\n      }, error => {\n        console.error('Error fetching hotel data', error);\n      });\n  }\n  findFlightObjectById(id){\n    console.log(this.reclamService.findById(id));\n    \n    return this.reclamService.findById(id);\n}\n  getActivities(): string[] {\n    // Ideally, these activities should be fetched from the backend or based on the country visited.\n    return ['Activity 1', 'Activity 2', 'Activity 3'];\n  }\n\n  confirmAndNavigate() {\n    // Logic to perform before navigation (if any)\n    \n    // Navigate to another page, e.g., '/confirmation'\n    this.router.navigate(['/confirmation',this.id]);\n  }\n  calculateTotalCost() {\n    this.totalCost = 0;\n    console.log(this.flight.price);\n        \n    this.totalCost += this.flight.price;\n    this.totalCost += this.hotel.price;\n    \n  }\n\n}\n"],"mappings":";AACA,SAASA,SAAS,QAAQ,eAAe;AASlC,WAAMC,eAAe,GAArB,MAAMA,eAAe;EAM1B;EAEAC,YAAoBC,KAAqB,EAASC,IAAgB,EAASC,eAAiC,EAAUC,MAAc,EAASC,KAAK;IAA9H,KAAAJ,KAAK,GAALA,KAAK;IAAyB,KAAAC,IAAI,GAAJA,IAAI;IAAqB,KAAAC,eAAe,GAAfA,eAAe;IAA4B,KAAAC,MAAM,GAANA,MAAM;IAAiB,KAAAC,KAAK,GAALA,KAAK;IAPlJ,KAAAC,EAAE,GAAG,CAAW;IAGhB,KAAAC,SAAS,GAAW,CAAC;EAIiI;EAEtJC,QAAQA,CAAA;IACN,IAAI,CAACP,KAAK,CAACQ,QAAQ,CAACC,SAAS,CAAEC,MAAuC,IAAI;MACxE,IAAI,CAACL,EAAE,GAAGK,MAAM,CAACC,GAAG,CAAC,IAAI,CAAC;IAC5B,CAAC,CAAC;IACF,IAAI,CAACC,SAAS,CAAC,IAAI,CAACP,EAAE,CAAC;IACvB,IAAI,CAACQ,QAAQ,CAAC,IAAI,CAACR,EAAE,CAAC;IACtBS,OAAO,CAACC,GAAG,CAAC,IAAI,CAACC,MAAM,EAAC,IAAI,CAACZ,KAAK,CAAC;IAEnC;IACA,IAAI,CAACa,kBAAkB,EAAE;EAE3B;EAEAL,SAASA,CAACM,MAAc;IACtB,IAAI,CAACjB,IAAI,CAACU,GAAG,CAAC,wCAAwCO,MAAM,EAAE,CAAC,CAC5DT,SAAS,CAACU,IAAI,IAAG;MAChB,IAAI,CAACH,MAAM,GAAGG,IAAI;MAClBL,OAAO,CAACC,GAAG,CAACI,IAAI,CAAC;IACnB,CAAC,EAAEC,KAAK,IAAG;MACTN,OAAO,CAACM,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;IACpD,CAAC,CAAC;EACN;EAEAP,QAAQA,CAACK,MAAc;IACrB,IAAI,CAACjB,IAAI,CAACU,GAAG,CAAC,sCAAsCO,MAAM,EAAE,CAAC,CAC1DT,SAAS,CAACU,IAAI,IAAG;MAChB,IAAI,CAACf,KAAK,GAAGe,IAAI;MACjBL,OAAO,CAACC,GAAG,CAACI,IAAI,CAAC;IACnB,CAAC,EAAEC,KAAK,IAAG;MACTN,OAAO,CAACM,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACnD,CAAC,CAAC;EACN;EACAC,oBAAoBA,CAAChB,EAAE;IACrBS,OAAO,CAACC,GAAG,CAAC,IAAI,CAACO,aAAa,CAACC,QAAQ,CAAClB,EAAE,CAAC,CAAC;IAE5C,OAAO,IAAI,CAACiB,aAAa,CAACC,QAAQ,CAAClB,EAAE,CAAC;EAC1C;EACEmB,aAAaA,CAAA;IACX;IACA,OAAO,CAAC,YAAY,EAAE,YAAY,EAAE,YAAY,CAAC;EACnD;EAEAC,kBAAkBA,CAAA;IAChB;IAEA;IACA,IAAI,CAACtB,MAAM,CAACuB,QAAQ,CAAC,CAAC,eAAe,EAAC,IAAI,CAACrB,EAAE,CAAC,CAAC;EACjD;EACAY,kBAAkBA,CAAA;IAChB,IAAI,CAACX,SAAS,GAAG,CAAC;IAClBQ,OAAO,CAACC,GAAG,CAAC,IAAI,CAACC,MAAM,CAACW,KAAK,CAAC;IAE9B,IAAI,CAACrB,SAAS,IAAI,IAAI,CAACU,MAAM,CAACW,KAAK;IACnC,IAAI,CAACrB,SAAS,IAAI,IAAI,CAACF,KAAK,CAACuB,KAAK;EAEpC;CAED;AAnEY7B,eAAe,GAAA8B,UAAA,EAL3B/B,SAAS,CAAC;EACTgC,QAAQ,EAAE,YAAY;EACtBC,WAAW,EAAE,yBAAyB;EACtCC,SAAS,EAAE,CAAC,wBAAwB;CACrC,CAAC,C,EACWjC,eAAe,CAmE3B"},"metadata":{},"sourceType":"module","externalDependencies":[]}