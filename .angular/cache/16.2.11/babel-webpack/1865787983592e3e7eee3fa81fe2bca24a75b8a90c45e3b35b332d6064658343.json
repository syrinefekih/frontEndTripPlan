{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class WorkflowService {\n  constructor(http) {\n    this.http = http;\n    this.camundaUrl = \"http://localhost:8088/travelplan\";\n  }\n  //START the process with a business key == idUser\n  startProcess(idUser) {\n    const urlTask = `${this.camundaUrl}start-process`;\n    this.http.post(urlTask, idUser).subscribe(data => {\n      console.log(data);\n    });\n  }\n  //COMPLETE TASK 1 :\n  completeTask1(idUser) {\n    const urlTask = `${this.camundaUrl}/complete-task/task1/${idUser}`;\n    this.http.post(urlTask, \"\").subscribe(data => {\n      console.log(data);\n    });\n  }\n  //COMPLETE TASK 2:\n  completeTask2(idUser) {\n    const urlTask = `${this.camundaUrl}/complete-task/task2/${idUser}`;\n    this.http.post(urlTask, \"\").subscribe(data => {\n      console.log(data);\n    });\n  }\n  //COMPLETE TASK 3:\n  completeTask3(idUser) {\n    const urlTask = `${this.camundaUrl}/complete-task/task3/${idUser}`;\n    this.http.post(urlTask, \"\").subscribe(data => {\n      console.log(data);\n    });\n  }\n  //COMPLETE TASK 4:\n  completeTask4(idUser) {\n    const urlTask = `${this.camundaUrl}/complete-task/task4/${idUser}`;\n    this.http.post(urlTask, \"\").subscribe(data => {\n      console.log(data);\n    });\n  }\n  //COMPLETE TASK 5:\n  completeTask5(idUser) {\n    const urlTask = `${this.camundaUrl}/complete-task/task5/${idUser}`;\n    this.http.post(urlTask, \"\").subscribe(data => {\n      console.log(data);\n    });\n  }\n  //COMPLETE TASK 6:\n  completeTask6(idUser) {\n    const urlTask = `${this.camundaUrl}/complete-task/task6/${idUser}`;\n    this.http.post(urlTask, \"\").subscribe(data => {\n      console.log(data);\n    });\n  }\n  //COMPLETE TASK 7:\n  completeTask7(idUser, confirmation) {\n    const urlTask = `${this.camundaUrl}/complete-task/task7/${idUser}/${confirmation}`;\n    this.http.post(urlTask, \"\").subscribe(data => {\n      console.log(data);\n    });\n  }\n  //COMPLETE TASK 8:\n  completeTask8(idUser) {\n    const urlTask = `${this.camundaUrl}/complete-task/task8/${idUser}`;\n    this.http.post(urlTask, \"\").subscribe(data => {\n      console.log(data);\n    });\n  }\n  //COMPLETE TASK 9:\n  completeTask9(idUser) {\n    const urlTask = `${this.camundaUrl}/complete-task/task9/${idUser}`;\n    this.http.post(urlTask, \"\").subscribe(data => {\n      console.log(data);\n    });\n  }\n  static #_ = this.ɵfac = function WorkflowService_Factory(t) {\n    return new (t || WorkflowService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: WorkflowService,\n    factory: WorkflowService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["WorkflowService","constructor","http","camundaUrl","startProcess","idUser","urlTask","post","subscribe","data","console","log","completeTask1","completeTask2","completeTask3","completeTask4","completeTask5","completeTask6","completeTask7","confirmation","completeTask8","completeTask9","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["D:\\newsemantic\\semantic-front\\src\\app\\workflow.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { User } from './model/User';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WorkflowService {\n\n  idUser: any;\n  camundaUrl=\"http://localhost:8088/travelplan\";\n\n  constructor(private http: HttpClient) { }\n\n\n//START the process with a business key == idUser\n  startProcess(idUser:any){\n    const urlTask= `${this.camundaUrl}start-process`;\n    this.http.post<string>(urlTask,idUser).subscribe(data => {console.log(,data)})\n  }\n\n\n\n//COMPLETE TASK 1 :\n  completeTask1(idUser : String) {\n    const urlTask= `${this.camundaUrl}/complete-task/task1/${idUser}`;\n    this.http.post<string>(urlTask, \"\").subscribe(data => {console.log(data)});\n  }\n\n//COMPLETE TASK 2:\ncompleteTask2(idUser : String) {\n  const urlTask= `${this.camundaUrl}/complete-task/task2/${idUser}`;\n  this.http.post<string>(urlTask, \"\").subscribe(data => {console.log(data)});\n}\n\n//COMPLETE TASK 3:\ncompleteTask3(idUser : String) {\n  const urlTask= `${this.camundaUrl}/complete-task/task3/${idUser}`;\n  this.http.post<string>(urlTask, \"\").subscribe(data => {console.log(data)});\n}\n\n//COMPLETE TASK 4:\ncompleteTask4(idUser : String) {\n  const urlTask= `${this.camundaUrl}/complete-task/task4/${idUser}`;\n  this.http.post<string>(urlTask, \"\").subscribe(data => {console.log(data)});\n}\n//COMPLETE TASK 5:\ncompleteTask5(idUser : String) {\n  const urlTask= `${this.camundaUrl}/complete-task/task5/${idUser}`;\n  this.http.post<string>(urlTask, \"\").subscribe(data => {console.log(data)});\n}\n//COMPLETE TASK 6:\ncompleteTask6(idUser : String) {\n  const urlTask= `${this.camundaUrl}/complete-task/task6/${idUser}`;\n  this.http.post<string>(urlTask, \"\").subscribe(data => {console.log(data)});\n}\n\n//COMPLETE TASK 7:\ncompleteTask7(idUser : String,confirmation : string) {\n  const urlTask= `${this.camundaUrl}/complete-task/task7/${idUser}/${confirmation}`;\n  this.http.post<string>(urlTask, \"\").subscribe(data => {console.log(data)});\n}\n\n//COMPLETE TASK 8:\ncompleteTask8(idUser : String) {\n  const urlTask= `${this.camundaUrl}/complete-task/task8/${idUser}`;\n  this.http.post<string>(urlTask, \"\").subscribe(data => {console.log(data)});\n}\n\n//COMPLETE TASK 9:\ncompleteTask9(idUser : String) {\n  const urlTask= `${this.camundaUrl}/complete-task/task9/${idUser}`;\n  this.http.post<string>(urlTask, \"\").subscribe(data => {console.log(data)});\n}\n\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}