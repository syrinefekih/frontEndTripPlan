{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let ResumeComponent = class ResumeComponent {\n  constructor(http) {\n    this.http = http;\n  }\n  ngOnInit() {\n    this.userId = 1; // Example user ID, replace with actual user ID\n    this.getFlight(this.userId);\n    this.getHotel(this.userId);\n    this.activities = this.getActivities(); // Populate with actual activities\n  }\n\n  getFlight(userId) {\n    this.http.get(`http://localhost:8089/flights/flight/${userId}`).subscribe(data => {\n      this.flight = data;\n    }, error => {\n      console.error('Error fetching flight data', error);\n    });\n  }\n  getHotel(userId) {\n    this.http.get(`http://localhost:8089/hotels/hotel/${userId}`).subscribe(data => {\n      this.hotel = data;\n    }, error => {\n      console.error('Error fetching hotel data', error);\n    });\n  }\n  getActivities() {\n    // Ideally, these activities should be fetched from the backend or based on the country visited.\n    return ['Activity 1', 'Activity 2', 'Activity 3'];\n  }\n};\nResumeComponent = __decorate([Component({\n  selector: 'app-resume',\n  templateUrl: './resume.component.html',\n  styleUrls: ['./resume.component.css']\n})], ResumeComponent);","map":{"version":3,"names":["Component","ResumeComponent","constructor","http","ngOnInit","userId","getFlight","getHotel","activities","getActivities","get","subscribe","data","flight","error","console","hotel","__decorate","selector","templateUrl","styleUrls"],"sources":["D:\\newsemantic\\semantic-front\\src\\app\\resume\\resume.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-resume',\n  templateUrl: './resume.component.html',\n  styleUrls: ['./resume.component.css']\n})\nexport class ResumeComponent {\n  userId: number; // This should be set based on the logged-in user\n  flight: any;\n  hotel: any;\n  activities: string[]; // List of activities\n\n  constructor(private http: HttpClient) { }\n\n  ngOnInit() {\n    this.userId = 1; // Example user ID, replace with actual user ID\n    this.getFlight(this.userId);\n    this.getHotel(this.userId);\n    this.activities = this.getActivities(); // Populate with actual activities\n  }\n\n  getFlight(userId: number) {\n    this.http.get(`http://localhost:8089/flights/flight/${userId}`)\n      .subscribe(data => {\n        this.flight = data;\n      }, error => {\n        console.error('Error fetching flight data', error);\n      });\n  }\n\n  getHotel(userId: number) {\n    this.http.get(`http://localhost:8089/hotels/hotel/${userId}`)\n      .subscribe(data => {\n        this.hotel = data;\n      }, error => {\n        console.error('Error fetching hotel data', error);\n      });\n  }\n\n  getActivities(): string[] {\n    // Ideally, these activities should be fetched from the backend or based on the country visited.\n    return ['Activity 1', 'Activity 2', 'Activity 3'];\n  }\n}\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AAOlC,WAAMC,eAAe,GAArB,MAAMA,eAAe;EAM1BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;EAAgB;EAExCC,QAAQA,CAAA;IACN,IAAI,CAACC,MAAM,GAAG,CAAC,CAAC,CAAC;IACjB,IAAI,CAACC,SAAS,CAAC,IAAI,CAACD,MAAM,CAAC;IAC3B,IAAI,CAACE,QAAQ,CAAC,IAAI,CAACF,MAAM,CAAC;IAC1B,IAAI,CAACG,UAAU,GAAG,IAAI,CAACC,aAAa,EAAE,CAAC,CAAC;EAC1C;;EAEAH,SAASA,CAACD,MAAc;IACtB,IAAI,CAACF,IAAI,CAACO,GAAG,CAAC,wCAAwCL,MAAM,EAAE,CAAC,CAC5DM,SAAS,CAACC,IAAI,IAAG;MAChB,IAAI,CAACC,MAAM,GAAGD,IAAI;IACpB,CAAC,EAAEE,KAAK,IAAG;MACTC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;IACpD,CAAC,CAAC;EACN;EAEAP,QAAQA,CAACF,MAAc;IACrB,IAAI,CAACF,IAAI,CAACO,GAAG,CAAC,sCAAsCL,MAAM,EAAE,CAAC,CAC1DM,SAAS,CAACC,IAAI,IAAG;MAChB,IAAI,CAACI,KAAK,GAAGJ,IAAI;IACnB,CAAC,EAAEE,KAAK,IAAG;MACTC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACnD,CAAC,CAAC;EACN;EAEAL,aAAaA,CAAA;IACX;IACA,OAAO,CAAC,YAAY,EAAE,YAAY,EAAE,YAAY,CAAC;EACnD;CACD;AArCYR,eAAe,GAAAgB,UAAA,EAL3BjB,SAAS,CAAC;EACTkB,QAAQ,EAAE,YAAY;EACtBC,WAAW,EAAE,yBAAyB;EACtCC,SAAS,EAAE,CAAC,wBAAwB;CACrC,CAAC,C,EACWnB,eAAe,CAqC3B"},"metadata":{},"sourceType":"module","externalDependencies":[]}