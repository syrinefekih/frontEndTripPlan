{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let ResumeComponent = class ResumeComponent {\n  //activities: string[]; // List of activities\n  constructor(route, http, workflowService, router, hotelService, flightService) {\n    this.route = route;\n    this.http = http;\n    this.workflowService = workflowService;\n    this.router = router;\n    this.hotelService = hotelService;\n    this.flightService = flightService;\n    this.id = 0;\n    this.flight = {};\n    this.hotel = {};\n    this.totalCost = 0;\n  }\n  ngOnInit() {\n    this.route.paramMap.subscribe(params => {\n      this.id = params.get('id');\n    });\n    this.findFlightObjectById(this.id).subscribe(data => {\n      this.flight = data;\n    });\n    this.findHotelObjectById(this.id).subscribe(data => {\n      this.hotel = data;\n    });\n    console.log(this.flight, this.hotel);\n    //this.activities = this.getActivities(); // Populate with actual activities\n    this.calculateTotalCost();\n  }\n  findFlightObjectById(id) {\n    console.log(this.flightService.findById(id));\n    return this.flightService.findById(id);\n  }\n  findHotelObjectById(id) {\n    console.log(this.hotelService.findById(id));\n    return this.hotelService.findById(id);\n  }\n  getActivities() {\n    // Ideally, these activities should be fetched from the backend or based on the country visited.\n    return ['Activity 1', 'Activity 2', 'Activity 3'];\n  }\n  confirmAndNavigate() {\n    // Logic to perform before navigation (if any)\n    // Navigate to another page, e.g., '/confirmation'\n    this.router.navigate(['/confirmation', this.id]);\n  }\n  calculateTotalCost() {\n    this.totalCost = 0;\n    console.log(this.flight.price);\n    this.totalCost += this.flight.price;\n    this.totalCost += this.hotel.price;\n  }\n};\nResumeComponent = __decorate([Component({\n  selector: 'app-resume',\n  templateUrl: './resume.component.html',\n  styleUrls: ['./resume.component.css']\n})], ResumeComponent);","map":{"version":3,"names":["Component","ResumeComponent","constructor","route","http","workflowService","router","hotelService","flightService","id","flight","hotel","totalCost","ngOnInit","paramMap","subscribe","params","get","findFlightObjectById","data","findHotelObjectById","console","log","calculateTotalCost","findById","getActivities","confirmAndNavigate","navigate","price","__decorate","selector","templateUrl","styleUrls"],"sources":["D:\\newsemantic\\semantic-front\\src\\app\\resume\\resume.component.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Component } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { WorkflowService } from '../workflow.service';\nimport { HotelService } from '../hotel.service';\nimport { FlightService } from '../flight.service';\nimport { Flight } from '../model/Flight';\nimport { Hotel } from '../model/Hotel';\n\n@Component({\n  selector: 'app-resume',\n  templateUrl: './resume.component.html',\n  styleUrls: ['./resume.component.css']\n})\nexport class ResumeComponent {\n  id = 0 as number ;\n  flight= {} as Flight;\n  hotel= {} as Hotel;\n  totalCost: number = 0;\n\n  //activities: string[]; // List of activities\n\n  constructor(private route: ActivatedRoute,private http: HttpClient,private workflowService : WorkflowService, private router: Router,private hotelService : HotelService,private flightService : FlightService) { }\n\n  ngOnInit() {\n    this.route.paramMap.subscribe((params: { get: (arg0: string) => any; }) => {\n      this.id = params.get('id'); \n    });\n    this.findFlightObjectById(this.id).subscribe(data => {\n      this.flight=data;\n    });\n    this.findHotelObjectById(this.id).subscribe(data => {\n      this.hotel=data;\n    });    \n    console.log(this.flight,this.hotel);\n    \n    //this.activities = this.getActivities(); // Populate with actual activities\n    this.calculateTotalCost();\n\n  }\n\n\n\n\n  findFlightObjectById(id:any){\n    console.log(this.flightService.findById(id));\n    \n    return this.flightService.findById(id);\n}\nfindHotelObjectById(id:any){\n  console.log(this.hotelService.findById(id));\n  \n  return this.hotelService.findById(id);\n}\n  getActivities(): string[] {\n    // Ideally, these activities should be fetched from the backend or based on the country visited.\n    return ['Activity 1', 'Activity 2', 'Activity 3'];\n  }\n\n  confirmAndNavigate() {\n    // Logic to perform before navigation (if any)\n    \n    // Navigate to another page, e.g., '/confirmation'\n    this.router.navigate(['/confirmation',this.id]);\n  }\n  calculateTotalCost() {\n    this.totalCost = 0;\n    console.log(this.flight.price);\n        \n    this.totalCost += this.flight.price;\n    this.totalCost += this.hotel.price;\n    \n  }\n\n}\n"],"mappings":";AACA,SAASA,SAAS,QAAQ,eAAe;AAalC,WAAMC,eAAe,GAArB,MAAMA,eAAe;EAM1B;EAEAC,YAAoBC,KAAqB,EAASC,IAAgB,EAASC,eAAiC,EAAUC,MAAc,EAASC,YAA2B,EAASC,aAA6B;IAA1L,KAAAL,KAAK,GAALA,KAAK;IAAyB,KAAAC,IAAI,GAAJA,IAAI;IAAqB,KAAAC,eAAe,GAAfA,eAAe;IAA4B,KAAAC,MAAM,GAANA,MAAM;IAAiB,KAAAC,YAAY,GAAZA,YAAY;IAAwB,KAAAC,aAAa,GAAbA,aAAa;IAP9L,KAAAC,EAAE,GAAG,CAAW;IAChB,KAAAC,MAAM,GAAE,EAAY;IACpB,KAAAC,KAAK,GAAE,EAAW;IAClB,KAAAC,SAAS,GAAW,CAAC;EAI6L;EAElNC,QAAQA,CAAA;IACN,IAAI,CAACV,KAAK,CAACW,QAAQ,CAACC,SAAS,CAAEC,MAAuC,IAAI;MACxE,IAAI,CAACP,EAAE,GAAGO,MAAM,CAACC,GAAG,CAAC,IAAI,CAAC;IAC5B,CAAC,CAAC;IACF,IAAI,CAACC,oBAAoB,CAAC,IAAI,CAACT,EAAE,CAAC,CAACM,SAAS,CAACI,IAAI,IAAG;MAClD,IAAI,CAACT,MAAM,GAACS,IAAI;IAClB,CAAC,CAAC;IACF,IAAI,CAACC,mBAAmB,CAAC,IAAI,CAACX,EAAE,CAAC,CAACM,SAAS,CAACI,IAAI,IAAG;MACjD,IAAI,CAACR,KAAK,GAACQ,IAAI;IACjB,CAAC,CAAC;IACFE,OAAO,CAACC,GAAG,CAAC,IAAI,CAACZ,MAAM,EAAC,IAAI,CAACC,KAAK,CAAC;IAEnC;IACA,IAAI,CAACY,kBAAkB,EAAE;EAE3B;EAKAL,oBAAoBA,CAACT,EAAM;IACzBY,OAAO,CAACC,GAAG,CAAC,IAAI,CAACd,aAAa,CAACgB,QAAQ,CAACf,EAAE,CAAC,CAAC;IAE5C,OAAO,IAAI,CAACD,aAAa,CAACgB,QAAQ,CAACf,EAAE,CAAC;EAC1C;EACAW,mBAAmBA,CAACX,EAAM;IACxBY,OAAO,CAACC,GAAG,CAAC,IAAI,CAACf,YAAY,CAACiB,QAAQ,CAACf,EAAE,CAAC,CAAC;IAE3C,OAAO,IAAI,CAACF,YAAY,CAACiB,QAAQ,CAACf,EAAE,CAAC;EACvC;EACEgB,aAAaA,CAAA;IACX;IACA,OAAO,CAAC,YAAY,EAAE,YAAY,EAAE,YAAY,CAAC;EACnD;EAEAC,kBAAkBA,CAAA;IAChB;IAEA;IACA,IAAI,CAACpB,MAAM,CAACqB,QAAQ,CAAC,CAAC,eAAe,EAAC,IAAI,CAAClB,EAAE,CAAC,CAAC;EACjD;EACAc,kBAAkBA,CAAA;IAChB,IAAI,CAACX,SAAS,GAAG,CAAC;IAClBS,OAAO,CAACC,GAAG,CAAC,IAAI,CAACZ,MAAM,CAACkB,KAAK,CAAC;IAE9B,IAAI,CAAChB,SAAS,IAAI,IAAI,CAACF,MAAM,CAACkB,KAAK;IACnC,IAAI,CAAChB,SAAS,IAAI,IAAI,CAACD,KAAK,CAACiB,KAAK;EAEpC;CAED;AA5DY3B,eAAe,GAAA4B,UAAA,EAL3B7B,SAAS,CAAC;EACT8B,QAAQ,EAAE,YAAY;EACtBC,WAAW,EAAE,yBAAyB;EACtCC,SAAS,EAAE,CAAC,wBAAwB;CACrC,CAAC,C,EACW/B,eAAe,CA4D3B"},"metadata":{},"sourceType":"module","externalDependencies":[]}